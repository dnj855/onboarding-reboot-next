// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================================================================
// TABLES PRINCIPALES - Phase 1 MVP
// =============================================================================

model Company {
  id        String   @id @default(cuid())
  name      String
  domain    String   @unique
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  users     User[]

  @@map("companies")
}

model User {
  id        String   @id @default(cuid())
  companyId String   @map("company_id")
  email     String   @unique
  role      Role
  teamId    String?  @map("team_id") // Optionnel pour les Admin RH
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  company     Company     @relation(fields: [companyId], references: [id], onDelete: Cascade)
  magicLinks  MagicLink[]
  authSessions AuthSession[]

  @@map("users")
}

// =============================================================================
// TABLES D'AUTHENTIFICATION - Phase 4
// =============================================================================

model MagicLink {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  tokenHash String   @unique @map("token_hash")
  usedAt    DateTime? @map("used_at")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("magic_links")
}

model AuthSession {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  tokenHash String   @unique @map("token_hash")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("auth_sessions")
}

// =============================================================================
// ENUMS
// =============================================================================

enum Role {
  ADMIN_RH
  MANAGER
  COLLABORATEUR
}
